db.provider: janusgraph
db.janusgraph.index.search.directory: /tmp/thehive.idx

storage {
  provider: localfs
  localfs.directory: /data/thehive
}

auth {
  providers: [
    {name: session}
    {name: basic, realm: thehive}
    {name: local}
    {name: key}
  ]
  defaultUserDomain: "thehive.local"
  multifactor {
    enabled: true
    issuer: TheHive
  }
}

session {
  warning: 5m
  inactivity: 1h
}

attachment.hash: [SHA-256, SHA-1, MD5]
datastore.attachment.password: "malware"

describe.cache.expire: 10 minutes

stream.longPolling {
  refresh: 1 minute
  maxWait: 1 second
  graceDuration: 100 milliseconds
  keepAlive: 5 minutes
}

tags {
  autocreate: true
  defaultNamespace: "_autocreate"
  defaultColour: "#000000"
}

user {
  defaults {
    notification: []
    organisation: "admin"
    profile: "admin"
  }
  autoCreateOnSso: false
  profileFieldName: "profile"
  organisationFieldName: "organisation"
}

organisation {
  defaults {
    notification: []
  }
}

roles: [default]

play.mailer {
  host: "localhost"
}

application.baseUrl: "http://localhost"

notification {
  webhook {
    endpoints: []
  }
  mattermost {
    webhook: "http://localhost:8065/hooks/xxxyoursecretkeyxxx"
    username: "thehive"
    ws: {}
    template: """
Audit ({{audit.requestId}}):
{{audit.action}} {{audit.objectType}} {{audit.objectId}}
  by {{audit._createdBy}} at {audit._createdAt}}
Context {{context._type}} {{context._id}} ({{user.organisation}})
For user {{user.login}}
----------------"""
  }
  emailer {
    subject: "Notification from TheHive"
    from: "notification@thehive.local"
    template: """
Audit ({{audit.requestId}}):
{{audit.action}} {{audit.objectType}} {{audit.objectId}}
  by {{audit._createdBy}} at {audit._createdAt}}
Context {{context._type}} {{context._id}} ({{user.organisation}})
For user {{user.login}}
----------------"""
  }
  appendToFile {
    template: """
Audit ({{audit.requestId}}):
{{audit.action}} {{audit.objectType}} {{audit.objectId}}
  by {{audit._createdBy}} at {audit._createdAt}}
Context {{context._type}} {{context._id}} ({{user.organisation}})
For user {{user.login}}
----------------"""
  }

}

integrityCheck {
  profile {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  organisation {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  tag {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  user {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  impactStatus {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  resolutionStatus {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  observableType {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  customField {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  caseTemplate {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  data {
    initialDelay: 1 minute
    interval: 10 minutes
  }
  case {
    initialDelay: 1 minute
    interval: 10 minutes
  }
}
