organisation.name = "default"

db {
//  provider: orientdb
//  url: "embedded:/docker/data/orientdb"
//  user: admin
//  password = admin
//  maxRetryOnConflict = 5
//  chunkSize = 32k
  provider: janusgraph
  janusgraph {
    //  storage.backend: inmemory
    //  storage.backend: berkeleyje
    //  storage.directory: target/thehive.db
    storage.backend: hbase
    storage.hostname: [127.0.0.1]
    storage.hbase.table: test
    cache.db-cache = true
    cache.db-cache-clean-wait = 20
    cache.db-cache-time = 180000
    cache.db-cache-size = 0.5
  }
  maxRetryOnConflict = 3
  chunkSize = 32k
}

attachment.localfs.location = /docker/data/storage


auth.provider: [local]
attachment.hash = ["SHA-256", "SHA-1", "MD5"]
datastore {
  hash.main = "SHA-256"
  hash.extra = ["SHA-1", "MD5"]
  name = "data"
  chunksize = 50k
  attachment.password = "malware"
}

search {
  index = the_hive
  cluster = hive
  host = ["127.0.0.1:9300"]
  //    # Scroll keepalive
  keepalive = 1h
  //    # Size of the page for scroll
  pagesize = 5
  //    # Number of shards
  //    nbshards = 5
  //    # Number of replicas
  //    nbreplicas = 1
  //    # Arbitrary settings
  //    settings {
  //      # Maximum number of nested fields
  //      mapping.nested_fields.limit = 100
  //    }
  //  }
}

dblist.name = dblist

play {

  modules {
    enabled = ["play.api.cache.ehcache.EhCacheModule"]
  }

  cache {
    # The name of the xml resource that should be used to configure the cache
    configResource = "ehcache.xml"
    # The caches to bind
    bindCaches = []
    # Whether play should try to create the caches listed in bindCaches
    # If false, the caches should be specified in the ehcache.xml configuration.
    createBoundCaches = true
    # The name of the default cache to use in ehcache
    defaultCache = "play"
    # The dispatcher used for get, set, remove,...  operations on the cache. By default Play's default dispatcher is used.
    dispatcher = null
  }

}